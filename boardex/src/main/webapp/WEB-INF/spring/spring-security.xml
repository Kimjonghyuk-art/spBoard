<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">


	<context:component-scan base-package="com.app.login.*"/>
	<beans:bean id="CustomAuthnticationSuccessHandler" class="com.app.login.common.CustomAuthnticationSuccessHandler"/>
	<http auto-config="true" use-expressions="true">

		<!-- 모든 url 패턴에 ROLE_USER의 권한을 가지고 있을때만 접근가능 -->
		<!-- <intercept-url pattern="/**" access="ROLE_USER" /> -->
		<intercept-url pattern="/board/**" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')"/>
		<intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/users/**" access="permitAll"/>
		<intercept-url pattern="/resources/**" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')"/>  
		<intercept-url pattern="/**" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')"/>  
		<access-denied-handler ref="userDeniedHandler" />


		<form-login
			username-parameter="userId"
			password-parameter="userPw"
			login-processing-url="/users/login.do"
			login-page="/users/loginpage.do"
			authentication-success-handler-ref="CustomAuthnticationSuccessHandler"
		/> 

		<!-- 로그아웃할 url 및 로그아웃성공시 이동할 url -->

		<logout
			logout-url="/users/logout.do"
			logout-success-url="/users/loginpage.do"
			invalidate-session="true"
			delete-cookies="true" />

		<remember-me data-source-ref="dataSource"
            remember-me-parameter="remember-me"
            token-validity-seconds="604800"/>

         <!-- <remember-me services-ref="" /> -->
	</http>

	<beans:bean id="userDeniedHandler" class="com.app.login.common.UserDeniedHandler" />
	

	<authentication-manager>
		<authentication-provider ref="userAuthProvider"></authentication-provider>
		<authentication-provider user-service-ref="userService"></authentication-provider>
	</authentication-manager>

	<beans:bean id="userService" class="com.app.login.service.CustomUserDetailsService"/>
	<beans:bean id="userAuthProvider" class="com.app.login.common.CustomAuthenticationProvider"/>

</beans:beans>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="boardDAO">

<!-- 검색조건 sql -->

<sql id="pagination">
	 <if test="searchKeyword != null and searchKeyword != ''">
		 	<choose>
		 		<when test="searchType != null and searchType != ''">
		 			<if test="searchType == 'title'">
		 			AND title LIKE CONCAT('%', #{searchKeyword}, '%')
		 			</if>
		 			<if test="searchType == 'content'">
		 			AND content LIKE CONCAT('%', #{searchKeyword}, '%')
		 			</if>
		 		</when>
		 		<otherwise>
		 			AND ( title LIKE CONCAT('%', #{searchKeyword}, '%')
		 				OR
		 				  content LIKE CONCAT('%', #{searchKeyword}, '%')
		 				)
		 		</otherwise>
		 	</choose>
		 </if>
</sql>



<!-- 전체 조회 -->
<select id="findAllBoards" resultType="BoardVO">
	SELECT idx
		 , writer
		 , title
		 , create_date
		 , hit
	FROM board
		<where>
			<include refid="pagination"></include> 
		</where>
	
	ORDER BY idx DESC
	LIMIT #{perPage} OFFSET #{startPage}
</select>

<select id="getBoard" resultType="BoardVO">
	SELECT board.idx
		,board.writer
        ,board.title
        ,board.content
        ,board.create_date
        ,board.hit
        ,(SELECT COUNT(board_idx) FROM boardlike WHERE board_idx = #{idx}) AS likeNo
	FROM board 
    LEFT JOIN boardfile ON boardfile.idx = board.idx
    WHERE board.idx = #{idx}

</select>

<delete id="delBoard" parameterType="BoardVO">
	DELETE 
	FROM board
	WHERE idx = #{idx}
</delete>

<select id="getMaxIdx" resultType="int">
	SELECT
	MAX(idx)
	FROM board
</select>

<insert id="upsert" parameterType="BoardVO">
INSERT INTO board (
	idx
	,writer
	,title
	,content
	,create_date
	,hit
	) VALUES (
		#{idx}
		,#{writer}
		,#{title}
		,#{content}
		,NOW()
		,default

) ON DUPLICATE KEY
UPDATE
	title = #{title}
	,content = #{content}
	,writer = #{writer}
</insert>


<!-- 테이블 목록 갯수 조회 -->
<select id="getBoardsCnt" resultType="int">
	SELECT COUNT(idx)
	FROM board
		<where>
			<include refid="pagination"></include>
		</where>
</select>

<!-- file 등록 -->
<insert id="fileUpsert" parameterType="BoardFileVO">
INSERT INTO boardfile (file_no
					 , file_original_name
					 , file_stored_name
					 , file_content_type
					 , file_upload_date
					 , file_path
					 , idx)
VALUES (#{fileNo}
		, #{fileOriginalName}
		, #{fileStoredName}
		, #{fileContentType}
		, NOW()
		, #{filePath}
		, #{idx}
) ON DUPLICATE KEY
	UPDATE
		file_original_name = #{fileOriginalName}
	   ,file_stored_name = #{fileStoredName}
	   ,file_content_type = #{fileContentType}
	   ,file_upload_date = now()
	   ,file_path = #{filePath}
</insert>

<!-- file 가져오기 -->
<select id="getFile" resultType="BoardFileVO">
SELECT * FROM boardfile WHERE idx = #{idx}

</select>

<!-- file 삭제 -->
<delete id="delFile">
DELETE FROM boardfile
WHERE file_no = #{fileNo}
</delete>

<!-- 파일 최대번호 조회 -->
<select id="getMaxFileNo" resultType="int">
SELECT MAX(file_no) FROM boardfile
</select>

<!-- 좋아요 확인 여부 -->
<select id="findLike" resultType="int">
SELECT count(*) 
FROM boardlike 
WHERE board_idx = #{boardIdx} 
	AND userId = #{userId}
	
</select>

<!-- 좋아요 등록 -->
<insert id="insertLike" parameterType="BoardLikeVO">

INSERT INTO boardLike (board_idx,userId)
VALUES (#{boardIdx}
	   ,#{userId})
</insert>

<!-- 좋아요 삭제 -->
<delete id="deleteLike" parameterType="BoardLikeVO">
DELETE FROM boardLike
WHERE board_idx = #{boardIdx} 
AND userId = #{userId}
</delete>

<!-- 좋아요 수 조회 -->
<select id="getLikeCnt" resultType="int">
SELECT COUNT(like_no) 
  FROM boardlike 
 WHERE board_idx = #{boardIdx}
</select>

<!-- 조회수 증가 -->
<update id="boardHitUp">
UPDATE board 
   SET hit = hit+1
 WHERE idx = #{idx}
</update>



</mapper>